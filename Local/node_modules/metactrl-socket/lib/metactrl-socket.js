const net = require('net');
var xml2js = require('xml2js');
var inspect = require('util').inspect;

var version = [0, 0, 1];

var server = {
        
  conn: false,
  connSuccessful: false,
  windowHandles: {},  
  connect: function() {        
        
    const RAMP_START = 5;
    const RAMP_INCREMENT = 5;
    const RAMP_LIMIT = 1000;        
    var ackFlag = false;   
    
    attemptConnection(RAMP_START);     
        
    function attemptConnection(ramp){
      if (ramp < RAMP_LIMIT) ramp += RAMP_INCREMENT;           
            
        var connector = net.connect({port: 8090, host: "127.0.0.1"}, () => {            
                    
          ramp = RAMP_START;
          server.conn = connector;
          server.connSuccessful = true;
          
          if(ackFlag == false) {
            ackFlag = true;
            connector.write('<MNSA1>');
          }          
        });
        connector.on('data', (data) => {          
          server.connSuccessful = false;
          server.processData(data.toString());          
        });
        connector.on('end', () => {            
          server.conn.end();
          server.connSuccessful = false;          
          setTimeout(function(){attemptConnection(ramp)},ramp);                    
        });
        connector.on('error', (err) => {          
          server.connSuccessful = false;
          setTimeout(function(){attemptConnection(ramp)},ramp);
        });        
      }
    },
    
    send: function(str){        
      onConnSend();        
      function onConnSend(){
        if (server.connSuccessful == true){
          server.conn.write(str);
        }
        else {
          setTimeout(function(){onConnSend()},5);          
        }
      }        
    },
        
    processData: function(str){      
      
      if(str.indexOf("<MCSA1>") != -1){            
        server.send("<MNSCRQ>Get-Window-Handles</MNSCRQ>");            
      } else if(str.indexOf("</MCSR>") != -1){
                
        var pStr = str.slice(6,-7);        
        
        if(pStr.indexOf("</window-handles>") != -1){
            server.processWindowHandles(pStr);
        }          
      }                      
    },
    
    processWindowHandles: function(str){        
      var xmlParser = new xml2js.Parser();
                
      xmlParser.parseString(str, function(err,result){
                       
        result["window-handles"].window.forEach(function(item) {
          server.windowHandles[item.id[0]] = item.handle[0];  
        });      
    });        
  }
}

// Exports
exports.server       = server;
exports.version      = version;
